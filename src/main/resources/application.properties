#database
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/itweet
spring.datasource.username=root
spring.datasource.password=root


##spring jpa
#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp


# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jackson.serialization.fail-on-empty-beans=false

#packagesToScan" value="mum.itweet.model"/>
#javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/itweet?useSSL=false"/>
#javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
#javax.persistence.jdbc.user" value="root"/>
#javax.persistence.jdbc.password= "root"
#javax.persistence.schema-generation.database.action=drop-and-create
#hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
##hibernate.id.new_generator_mappings" value="false"
#hibernate.show_sql=true
##hibernate.format_sql" value="true"/>-->


# ===============================
# = CUSTOM / CONFIGURATION
# ===============================
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
#file.system.upload.base.path=C:/uploads/

